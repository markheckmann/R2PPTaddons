% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{PPT.FitGraphicIntoShape}
\alias{PPT.FitGraphicIntoShape}
\title{Fit an image into an existing shape}
\usage{
PPT.FitGraphicIntoShape(
  ppt,
  file,
  shp,
  hjust = "center",
  vjust = "center",
  proportional = TRUE,
  maxscale = 1,
  delete.shape = TRUE,
  ...
)
}
\arguments{
\item{ppt}{The ppt object as used in \pkg{R2PPT}.}

\item{file}{Path to the image file.}

\item{shp}{Pointer to the shape which the image is fitted into.}

\item{hjust}{Horizontal und vertical alignment of image inside frame.
Either a string (\code{"center", "left", "right"}) or (\code{"center",
  "top", "bottom"}) or a numerical value between \code{[0,1]}. Values bigger
than \code{maxscale} are used for absolute horizontal und vertical offset.}

\item{vjust}{Horizontal und vertical alignment of image inside frame.
Either a string (\code{"center", "left", "right"}) or (\code{"center",
  "top", "bottom"}) or a numerical value between \code{[0,1]}. Values bigger
than \code{maxscale} are used for absolute horizontal und vertical offset.}

\item{proportional}{Logical (default \code{TRUE}). Whether scaling preserves
the aspect ratio of the graphic. See details section for additional
information.}

\item{maxscale}{Threshold below which values are interpreted as proportional
scaling factors for the \code{width} and \code{height} argument. Above the
threshold values are interpreted as pixels.}

\item{delete.shape}{Whether to destroy the placeholder shape afterwards
(default \code{TRUE}).}
}
\description{
Sometimes shapes serve as placeholders for an image. The function takes a
shape, fits an image in its position and deletes the placeholder shape
afterwards.
}
\examples{
\dontrun{

# create new PPT object and add one slide
p <- PPT.Init(visible=T, method = "RDCOMClient")
p <- PPT.AddBlankSlide(p)

# add two rectangle shapes to slide
p <- PPT.AddRectangle(p, width = .4, left=.1)                      # add a shape to slide
p <- PPT.AddRectangle(p, width = .4, left=.5, height=.45, top=.5)  # add a shape to slide

# get all shapes on current slide and replace by image
# shapes are not destroyed to see the image placement
s <- PPT.ShapesOnCurrentSlide(p)   
file <- system.file("image_1.png", package = "R2PPTaddons")  # get image
p <- PPT.FitGraphicIntoShape(p, file, shp=s[[1]], vjust="top", delete.shape =FALSE)
p <- PPT.FitGraphicIntoShape(p, file, shp=s[[2]], vjust="bottom", delete.shape =FALSE)

}




}
\author{
Mark Heckmann
}
