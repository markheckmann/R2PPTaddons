% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{set_shape_zorder}
\alias{set_shape_zorder}
\title{Set z-order of shape}
\usage{
set_shape_zorder(s, zcmd = 0, zposition = NULL)
}
\arguments{
\item{s}{Shape pointer.}

\item{zcmd}{MsoZOrderCmd enumeration determines a change in z-order of the shape. 
Either a number or a text abbreviation (e.g. \code{"front"}).}

\item{zposition}{Set the z-position directly. This is useful to restore 
a shape's z-position if a shape is replaced. A higher z-order means on top of other shapes.
Numbers outside the possible range (no of shapes) is fixed to allowed range.

\tabular{ll}{
\code{0, "front"} \tab Bring shape to the front \cr
\code{1, "back"}  \tab Send shape to the back \cr
\code{2, "up"}    \tab Bring shape upward \cr
\code{3, "down"}  \tab    Send shape downward \cr
\code{4} \tab    Bring shape in front of text \cr
\code{5} \tab    Send shape behind text
}}
}
\value{
\code{NULL} as shapes are passed as pointers.
}
\description{
Set z-order of shape
}
\examples{

\dontrun{

## z-order example 

 p <- PPT.Init(visible=T, method = "RDCOMClient")
 p <- PPT.AddBlankSlide(p)
 p <- PPT.AddShape(p, shape.type= 1, height=.4, width =.4, left=.0, top=.0, fill.color = "red")
 p <- PPT.AddShape(p, shape.type= 1, height=.4, width =.4, left=.1, top=.1, fill.color = "green")
 p <- PPT.AddShape(p, shape.type= 1, height=.4, width =.4, left=.2, top=.2)

 # change z-order of shape
 ss <- PPT.ShapesOnCurrentSlide(p)
 s <- ss[[1]]  # get first shape
 get_shape_properties(s)$zorder  # current z-position
 set_shape_zorder(s, "up")
 set_shape_zorder(s, zpos = 3)
}

}
\keyword{internal}
