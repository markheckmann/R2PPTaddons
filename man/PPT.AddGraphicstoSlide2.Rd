% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{PPT.AddGraphicstoSlide2}
\alias{PPT.AddGraphicstoSlide2}
\title{Adding a graphic to a slide.}
\usage{
PPT.AddGraphicstoSlide2(ppt, file, width = 0.9, height = 0.8, left = 0.05,
  top = 0.1, hjust = 0.5, vjust = 0.5, frame = list(),
  proportional = TRUE, newslide = TRUE, maxscale = 1,
  display.frame = FALSE, display.image = TRUE, line.color = "black",
  line.type = 1, line.size = 0, shadow.visible = FALSE,
  shadow.type = 21, shadow.color = "black", shadow.x = 3, shadow.y = 3,
  shadow.transparency = 0.6)
}
\arguments{
\item{ppt}{The ppt object as used in \pkg{R2PPT}.}

\item{file}{Path to the graphic file.}

\item{width, height}{Width / height of graphic. For values smaller than
\code{maxscale} (default is \code{1}) refers to a proportion of the current
slide's width. Values bigger than \code{maxscale} are interpreted as
pixels.}

\item{top, left}{Horizontal und vertical alignment of graphic inside frame.
Either a string (\code{"center", "left", "right"}) or (\code{"center",
"top", "bottom"}) or a numerical value. Numerical values bigger than
\code{maxscale} are interpreted as absolute pixels, smaller ones as
proportions.}

\item{hjust, vjust}{Horizontal und vertical alignment of image inside frame.
Either a string (\code{"center", "left", "right"}) or (\code{"center",
"top", "bottom"}) or a numerical value between \code{[0,1]}. Values bigger
than \code{maxscale} are used for absolute horizontal und vertical offset.}

\item{proportional}{Logical (default \code{TRUE}). Whether scaling preserves
the aspect ratio of the graphic. See details section for additional
information.}

\item{newslide}{Logical (default is \code{TRUE}) Whether the graphic will be
placed on a new slide.}

\item{maxscale}{Threshold below which values are interpreted as proportional
scaling factors for the \code{width} and \code{height} argument. Above the
threshold values are interpreted as pixels.}

\item{display.frame}{Add a shape representing the frame into which the image
is placed. This makes it easier when developing new slides (default
\code{FALSE}).}

\item{display.image}{Whether or not the image should be  added (default
\code{TRUE}).}

\item{line.color}{Color of text either as hex value or color name.}

\item{line.type}{\code{1} = solid (default), \code{2-8}= dots, dashes and
mixtures. See MsoLineDashStyle Enumeration for details.}

\item{line.size}{Thickness of line (default\code{1}).}

\item{shadow.visible}{Show shadow (default \code{FALSE}).}

\item{shadow.type}{1-20, see MsoShadowType enumeration (default \code{21}).}

\item{shadow.color}{Color of shadow (default \code{"black"}).}

\item{shadow.x, shadow.y}{Size of shadow.}

\item{shadow.transparency}{Shadow strength.}
}
\description{
\code{PPT.AddGraphicstoSlide2} is a modified version of
\code{PPT.AddGraphicstoSlide} from \pkg{R2PPT}. The PPT.AddGraphicstoSlide
function has the drawback that it requires the size of the graphic to be
supplied by the user. If the size is not supplied correctly, the graphic is
deformed. This function keeps the apsect ration intact and offers many
additional features for placing the image on the slide.
}
\note{
The common use case is to add graphics and scale them while preserving
  their aspect ratio. In the case this this is not wanted the argument
  \code{proportional} can be set to \code{FALSE}. When the aspect ratio is
  preserved and both arguments \code{width} and \code{height} are supplied,
  the graphic is scaled so that it will not exceed the size given by one of
  these values. This is useful when adding a lot of graphics of different
  size. Only using \code{width} may result in graphics exceeding the slide
  vertically and vice versa. using both parameters (the default) will cause
  the graphic to be scaled so it will fit the slide regardless of its
  dimensions.
}
\examples{
\dontrun{
  
  #### EXAMPLE ####
  
  # add PNG that comes with the packages
  file <- system.file("image_1.png", package = "R2PPTaddons")
  p <- PPT.Init(visible=TRUE, method="RDCOMClient")
  p <- PPT.AddGraphicstoSlide2(p, file)

  # the argument file is vectorized, so it takes multiple images
  folder <- system.file(package = "R2PPTaddons")
  files <- list.files(folder, pattern = ".png", full.names = T)
  p <- PPT.AddGraphicstoSlide2(p, files)    
  
  
  #### MORE EXAMPLES ####
  
  p <- PPT.Init(visible=TRUE, method="RDCOMClient")
  file <- system.file("image_1.png", package = "R2PPTaddons")
  
  # the image is placed within a frame. To get a better understanding
  # what happens first only the frame is displayed. Afterwards the image is added.
  p <- PPT.AddGraphicstoSlide2(p, file, display.frame = TRUE, display.image = FALSE) 
  p <- PPT.AddGraphicstoSlide2(p, file, newslide=F)    
  
  # width and height values smaller than maxscale (default is 1) 
  # are interpreted as a proportions of the slide width/height. Values 
  # greater than 1 are taken as absolute pixel width/height.
  p <- PPT.AddGraphicstoSlide2(p, file, width=.5)
  p <- PPT.AddGraphicstoSlide2(p, file, height=.5)

  # using pixel width/height instead of proportions of 
  # available slide width/height
  p <- PPT.AddGraphicstoSlide2(p, file, width=400)
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, left=0)
  
  # one can also fit the image completely to the frame potentially 
  # destroying the image's aspect ration, i.e. distorting it
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, height=100, proportional=FALSE)
  
  # position the image on slide
  p <- PPT.AddGraphicstoSlide2(p, file, left=0, width =.5)
  p <- PPT.AddGraphicstoSlide2(p, file, top=0, height =.5)
  
  # aligment of image inside the frame
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, display.frame = T)
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, vjust="top",display.frame = T)
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, vjust=0,display.frame = T)
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, vjust="bottom",display.frame = T)
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, vjust=1, display.frame = T)
  p <- PPT.AddGraphicstoSlide2(p, file, width=400, vjust=400, display.frame = T)
}
}
\author{
Mark Heckmann
}
